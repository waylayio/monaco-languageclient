"""
This type stub file was generated by pyright.
"""

from simple_rest_client.exceptions import ClientConnectionError as _ClientConnectionError, ErrorWithResponse as _ErrorWithResponse

"""Base exception class hierarchy for errors in the waylay client."""
class WaylayError(Exception):
    """Root class for all exceptions raised by this module."""
    ...


class AuthError(WaylayError):
    """Exception class for waylay authentication errors."""
    ...


class ConfigError(WaylayError):
    """Exception class for waylay client configuration."""
    ...


class RequestError(WaylayError):
    """Exception class for request validation errors within the waylay client.

    Notifies errors in tools and utilities that are not directly related to a REST call.
    """
    ...


class RestConnectionError(RequestError):
    """Exception class for request errors that are caused by client connection errors."""
    @classmethod
    def from_cause(cls, cause: _ClientConnectionError): # -> Self:
        """Convert a client connection error to a waylay client error."""
        ...
    


class RestError(WaylayError):
    """Exception class for failures to make a REST call."""
    ...


class RestRequestError(RestError):
    """Exception class for failures to prepare a REST call."""
    ...


class RestResponseError(RestError):
    """Exception class wrapping the response data of a REST call."""
    def __init__(self, message, response) -> None:
        """Wrap a REST response in an error."""
        ...
    
    @property
    def message(self): # -> Any:
        """Get the user message for this error."""
        ...
    
    def __str__(self) -> str:
        """Render the error to a user-friendly string."""
        ...
    
    @classmethod
    def from_cause(cls, cause: _ErrorWithResponse): # -> Self:
        """Convert a rest client error to a waylay client error."""
        ...
    


class RestResponseParseError(RestResponseError):
    """Exception raised when a successfull http request (200) could not be parsed succesfully."""
    ...


