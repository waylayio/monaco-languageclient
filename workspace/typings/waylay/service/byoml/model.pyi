"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, Optional, Union
from waylay.service import WaylayRESTService
from .._base import WaylayResource
from .._decorators import suppress_header_decorator
from ._model_archive import ByomlModel, PathLike

"""REST definitions for the 'model' entity of the 'byoml' service."""
LOG = ...
DEFAULT_MODEL_UPLOAD_TIMEOUT = ...
LOG_SERVER_TIMING = ...
byoml_server_timing_decorator = ...
MODEL_NAME_ARG = ...
MODEL_RESULT = ...
MODEL_INFERENCE_RESULT = ...
def model_execution_request_decorator(action_method): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    """Decorate an action to prepare the execution of the model.

    Transforms any input data into a list, and provides it
    as `instances` in the request body.
    """
    ...

class ModelResource(WaylayResource):
    """REST Resource for the 'model' entity of the 'byoml' service."""
    service: WaylayRESTService
    link_roots = ...
    actions = ...
    def __init__(self, *args, **kwargs) -> None:
        """Create a ModelResource."""
        ...
    
    @suppress_header_decorator('Content-Type')
    def upload(self, model_name: str, trained_model: Union[PathLike, ByomlModel], framework: str = ..., framework_version: Optional[str] = ..., metadata: Optional[Dict] = ..., description: Optional[str] = ..., requirements_file: Optional[PathLike] = ..., requirements: Optional[str] = ..., lib: Optional[PathLike] = ..., work_dir: Optional[PathLike] = ..., **kwargs) -> Any:
        """Upload a new machine learning model with given name, framework and description.

Arguments:
    model_name      The name of the model.
    trained_model   The model object (will be serialised to an zip archive before upload),
                    or a file path to the serialized model file or folder.
    framework       One of the supported frameworks (default 'sklearn').
    framework_version
                    A supported framework version, (default `None`,
                    which selects the default server side)
    metadata       User modifiable metadata. Standardised ones are:
                    * 'description' A description of the model.
                    * 'author' The attributed author of the model.
                    * 'title' Used as display title in user interfaces.
    description     Description of the model. (Deprecated: prefer `metadata.description`)
    requirements_file
                    A file containing custom python requirements (above that of the framework)
    requirements    Custom python requirements (above those of the framework).
                    Only one of 'requirements' and 'requirements_file' can be specified.
    lib             A file or folder with custom packages that can be referred to in
                    the requirements file as 'lib/<custom-requirement>'
    work_dir        Optional location of the working directory used to serialize the model.
                    If not specified, a temporary directory is used.
    (other args)    Passed onto the underlying REST request
        """
        ...
    
    @suppress_header_decorator('Content-Type')
    def replace(self, model_name: str, trained_model: Union[PathLike, ByomlModel], framework: str = ..., framework_version: Optional[str] = ..., metadata: Optional[Dict] = ..., description: Optional[str] = ..., work_dir: Optional[PathLike] = ..., **kwargs) -> Any:
        """Replace a machine learning model with given name, framework and description.

Arguments:
    model_name      The name of the model.
    trained_model   The model object (will be serialised to an zip archive before upload).
    framework       One of the supported frameworks (default 'sklearn').
    framework_version
                    A supported framework version, (default `None`,
                    which selects the default server side)
    metadata       User modifiable metadata. Standardised ones are:
                    * 'description' A description of the model.
                    * 'author' The attributed author of the model.
                    * 'title' Used as display title in user interfaces.
    description     Description of the model. (Deprecated: prefer `metadata.description`)
    work_dir        Optional location of the working directory used to serialize the model.
                    If not specified, a temporary directory is used.
    (other)         Passed onto the underlying REST request.
        """
        ...
    


