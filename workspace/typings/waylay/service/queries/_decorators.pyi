"""
This type stub file was generated by pyright.
"""

import pandas as pd
from enum import Enum
from typing import List, Union

"""resource action method decorators specific for the 'queries' service."""
DEFAULT_RENDER_MODE = ...
def query_exception_decorator(action_method): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    """Decorate a query action with an error response parser."""
    ...

class MultiFrameHandling(Enum):
    """Strategies to handle list of data frames as returned by the queries api."""
    FIRST = ...
    LIST = ...
    SINGLE = ...
    SINGLE_OR_LIST = ...
    JOIN = ...


DEFAULT_DATAFRAME_CONSTRUCTOR_KEY = ...
def query_return_dataframe_decorator(data_key: str = ..., default_render_mode: str = ..., default_frames_handling: MultiFrameHandling = ...): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any | DataFrame | List[DataFrame] | None]]:
    """Decorate a query action with dataframe representation handling."""
    ...

def parse_data_frame_response(data_response, render_mode, frames_handling) -> Union[None, pd.DataFrame, List[pd.DataFrame]]:
    """Parse a json reponse to a dataframe.

    Handles a list of dataframes as specified in `frames_handling`.
    """
    ...

