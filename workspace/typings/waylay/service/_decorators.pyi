"""
This type stub file was generated by pyright.
"""

from typing import Any, Callable, Dict, List, Optional, TypeVar, Union
from logging import Logger

"""Resource action method decorators that are generally usefull."""
def suppress_header_decorator(header_key): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]]:
    """Create a decorator that suppresses a configured header on a resource during execution."""
    ...

def exception_decorator(action_method): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]:
    """Create a decorator that parses json error responses."""
    ...

def default_params_decorator(default_params: Dict[str, Any]): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]]:
    """Create a decorator that initializes default url request parameters."""
    ...

def default_header_decorator(default_headers: Dict[str, Any]): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]]:
    """Create a decorator that initializes default header parameters."""
    ...

def default_timeout_decorator(default_timeout: float): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]]:
    """Create a decorator that modifies the default http client timeout."""
    ...

T = TypeVar('T')
def identity_transform(obj: T) -> T:
    """Return the argument."""
    ...

def return_path_decorator(default_path: List[Union[int, str]], default_response_constructor: Optional[Callable[[Any], Any]] = ..., response_constructor_advice: str = ...): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any | None]]:
    """Create a decorator method that extracts a part of the json body of an action response.

    The 'default_path' is a list of 'int' or 'str' keys that select through
    'dict' and 'list' structures.
    The option 'response_constructor' wrap the value in a class or constructor method
    It processes the following qualified arguments in a method call:
    * if 'raw=True' is set, the original response is returned
    * if 'select_path' is set, that path is used rather than the 'default_path'
       provided in the decorator constructor.
    * if 'response_constructor' is set, it is used to wrap the response
      rather than 'default_response_constructor'
    """
    ...

def return_body_decorator(action_method): # -> _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any | None]:
    """Create a decorator that returns the body of an action response.

    Skipped if 'raw=True' is provided in the call.
    """
    ...

def log_server_timing_decorator(logger: Optional[Logger] = ..., level: int = ...): # -> Callable[..., _Wrapped[Callable[..., Any], Any, Callable[..., Any], Any]]:
    """Create a decorator that inspects and logs a 'Server-Timing' response header.

    This decorator should be below any response or exception decorator.
    """
    ...

def add_decorator_docs(decorators): # -> Callable[..., Any]:
    """Add the documentation of the given decorators to a method.

    Intended for methods that delegate to action methods with the given decorators.
    """
    ...

